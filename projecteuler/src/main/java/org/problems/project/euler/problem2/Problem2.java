package org.problems.project.euler.problem2;

import java.math.BigInteger;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 * 
 * @author marius
 * 
 */
public class Problem2 {
	public static void main(String[] args) {
		final int MAXIMUM = 4000000;
		
		int fibonacciTerm = 1;
		int index= 1;
		int evenValuedTermsSum = 0;
		
		while (fibonacciTerm< MAXIMUM){
			if (fibonacciTerm%2 == 0){
				evenValuedTermsSum += fibonacciTerm;
			}
			fibonacciTerm = FastFibonacci.fastFibonacciMatrix(++index).intValue();
		}
		
		System.out.println(evenValuedTermsSum);
	}

}
